[project]
name = "fastapi-crud"
version = "0.1.0"
description = "Example of a FastAPI CRUD app"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.17.1",
    "asyncpg>=0.30.0",
    "email-validator>=2.3.0",
    "fastapi[standard]>=0.120.4",
    "psycopg2>=2.9.11",
    "pydantic>=2.12.3",
    "pydantic-settings>=2.11.0",
    "sqlalchemy[asyncio]>=2.0.44",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-coverage>=0.0",
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
check_untyped_defs = false
warn_unused_ignores = false


[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = [
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=90",
]
testpaths = ["tests"]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::pytest.PytestDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
