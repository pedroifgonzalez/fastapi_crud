"""Add relations between models

Revision ID: 18b69c26f7ef
Revises: 4c864611810d
Create Date: 2025-10-30 22:28:43.102075

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "18b69c26f7ef"
down_revision: Union[str, Sequence[str], None] = "4c864611810d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "posts_tags_link",
        sa.Column("post_id", sa.Integer(), nullable=True),
        sa.Column("tag_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
    )
    op.add_column("comments", sa.Column("user_id", sa.Integer(), nullable=False))
    op.create_index(op.f("ix_comments_user_id"), "comments", ["user_id"], unique=False)
    op.create_foreign_key(
        "fk_comments_user_id_users",
        "comments",
        "users",
        ["user_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.add_column("posts", sa.Column("user_id", sa.Integer(), nullable=False))
    op.create_index(op.f("ix_posts_user_id"), "posts", ["user_id"], unique=False)
    op.create_foreign_key(
        "fk_posts_user_id_users",
        "posts",
        "users",
        ["user_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_posts_user_id_users", "posts", type_="foreignkey")
    op.drop_index(op.f("ix_posts_user_id"), table_name="posts")
    op.drop_column("posts", "user_id")
    op.drop_constraint("fk_comments_user_id_users", "comments", type_="foreignkey")
    op.drop_index(op.f("ix_comments_user_id"), table_name="comments")
    op.drop_column("comments", "user_id")
    op.drop_table("posts_tags_link")
    # ### end Alembic commands ###
